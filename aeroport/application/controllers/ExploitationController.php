<?php
class ExploitationController extends Zend_Controller_Action {	
	
	public function init(){
	
		// Mettre en place le redirecteur
		$this->_redirector = $this->_helper->getHelper('Redirector');
	
		// Récupération ACL
		$acl = Zend_Registry::get('acl');
	
		// Récupération du rôle enregistré en session
		$session = new Zend_Session_Namespace('role');
		// var_dump($session->role);exit;
		$role = $session->role;
		$controller = $this->getRequest()->getControllerName();
		$action = $this->getRequest()->getActionName();
	
		// Vérification des droits
		if(!$acl->isAllowed($role, $controller, $action)){
			// Rediriger vers le controlleur adapté
			$this->_redirector->gotoUrl('/index/index/error/Vous devez d\'abord vous connecter');
		}
	
		// Informer le Layout des détails sur le connecté
		Zend_Layout::getMvcInstance()->assign('login', Zend_Auth::getInstance()->getIdentity()->UTI_login);
		Zend_Layout::getMvcInstance()->assign('role', Zend_Auth::getInstance()->getIdentity()->TUTI_alias);
		Zend_Layout::getMvcInstance()->assign('roleLabel', Zend_Auth::getInstance()->getIdentity()->TUTI_label);
	}
	
	public function indexAction() {
		// on instancie un objet INCIDENT
		$indicent = new Application_Model_DbTable_Incident();
		// on récupère la liste des incidents
		$listeIncidents = $indicent->getIncidents()->toArray();
		// on envoie le résultat à la view
		$this->view->listeIncidents = $listeIncidents;		
			
		// permet d'avoir la date actuelle sous la forme yyyy-mm-dd
		$today = date('Y-m-d');
		// on instancie un objet VOL
		$vol = new Application_Model_DbTable_Vol();
		// permet de récupérer les vols de la semaine
		$volsDeLaSemaine = $vol->getVolsToday();
		// tableau contenant les vols du jour
		$volsDuJour = array();
		$i = 0;
		$avion = new Application_Model_DbTable_Avion();
		$maintenace = new Application_Model_DbTable_Maintenances();
		$aeroport = new Application_Model_DbTable_Aeroport();
		foreach ($volsDeLaSemaine as $vol) {			
			// on teste la date du vol pour ne récupérer que le jour actuel
			// la fonction date() permet de changer le format du dateTime de la BDD yyyy-mm-dd
			$test = date("Y-m-d", strtotime($vol['VOL_dateDepartPrevue']));
			if ($today == $test)  {
				$volsDuJour[$i]['VOL_id'] = $vol['VOL_id'];
				$volsDuJour[$i]['UTI_id_servicePlanning'] = $vol['UTI_id_servicePlanning'];
				$volsDuJour[$i]['AER_id_depart'] = $vol['AER_id_depart'];
				
				$infosAeroportDepart = $aeroport->getInfosAeroportById($vol['AER_id_depart'])->toArray();
				
				$volsDuJour[$i]['AER_nom_depart'] = $aeroport->getNomAeroportById($vol['AER_id_depart']);
				$volsDuJour[$i]['AER_id_arrivee'] = $vol['AER_id_arrivee'];
				
				$infosAeroportArrive = $aeroport->getInfosAeroportById($vol['AER_id_arrivee'])->toArray();
				
				$volsDuJour[$i]['AER_nom_arrivee'] = $aeroport->getNomAeroportById($vol['AER_id_arrivee']);
				$volsDuJour[$i]['LIG_id'] = $vol['LIG_id'];
				$volsDuJour[$i]['AVI_id'] = $vol['AVI_id'];
				$volsDuJour[$i]['PIL_id'] = $vol['PIL_id'];
				$volsDuJour[$i]['PIL_id_copilote'] = $vol['PIL_id_copilote'];
				$volsDuJour[$i]['UTI_id_serviceLogistique'] = $vol['UTI_id_serviceLogistique'];
				$volsDuJour[$i]['VOL_dateDepartPrevue'] = $vol['VOL_dateDepartPrevue'];
				$volsDuJour[$i]['VOL_dateDepartEffective'] = $vol['VOL_dateDepartEffective'];
				$volsDuJour[$i]['VOL_dateArriveeEffective'] = $vol['VOL_dateArriveeEffective'];
				$volsDuJour[$i]['AVI_id'] = $vol['AVI_id'];
				
				$typeAvion = $avion->getTypeAvionById($vol['AVI_id'])->toArray();
				$distance = $avion->calculDistance($infosAeroportDepart['AER_longitude'], $infosAeroportDepart['AER_latitude'], $infosAeroportArrive['AER_longitude'], $infosAeroportArrive['AER_latitude']);
				$duree = $avion->calculDuree($distance, $typeAvion['TAVI_vitessemoyenne']);
				$heures=floor($duree/3600);
				$reste=$duree%3600;
				$minutes=floor($reste/60);
				$volsDuJour[$i]['VOL_duree'] = $heures.'H '.$minutes.' mins';
				$volsDuJour[$i]['VOL_dateAjout'] = $vol['VOL_dateAjout'];				
				$i++;
			}
		}
		// on envoie les vols du jour à la view 
		$this->view->volsDuJour = $volsDuJour;
	}
	
	public function modifiervolAction() {
		$idVol = $this->_request->getParam('idVol');
		
		$vol = new Application_Model_DbTable_Vol();
		$volActuel = $vol->getVol($idVol);
				
		$modifierVol = new Application_Form_ModifierVol();
		$modifierVol->getElement('avion')->setValue($volActuel['avion']['AVI_id']);
		$modifierVol->getElement('pilote')->setValue($volActuel['pilote']['PIL_id']);
		$modifierVol->getElement('copilote')->setValue($volActuel['coPilote']['PIL_id']);
		if (!empty($volActuel['VOL_dateDepartEffective'])) {
			$modifierVol->getElement('heureDepartEffective')->setValue($volActuel['VOL_dateDepartEffective']);
		}
		if (!empty($volActuel['VOL_dateArriveeEffective'])) {
			$modifierVol->getElement('heureArriveeEffective')->setValue($volActuel['VOL_dateArriveeEffective']);
		}
		$this->view->formModifierVol = $modifierVol;
		
		if($this->getRequest()->isPost()) {
			$formData = $this->getRequest()->getPost();
			if($modifierVol->isValid($formData)) {
				$dateDepart = $modifierVol->getValue('heureDepartEffective');
				$idAeroportDepart = $volActuel['aeroportDepart']['AER_id_depart'];
				$dateArrivee = $modifierVol->getValue('heureArriveeEffective');
				$idAeroportArrivee = $volActuel['aeroportArrivee']['AER_id_arrivee'];
				$idAvion = $modifierVol->getValue('avion');
				$idPilote = $modifierVol->getValue('pilote');
				$idCoPilote = $modifierVol->getValue('copilote');
				
				if ($idPilote != $idCoPilote) {
					if (empty($dateDepart)) {
						$dateDepart = NULL;
					} 
					
					if (empty($dateArrivee)) {
						$dateArrivee = NULL;
					}
					$updateVol = $vol->modifierVol($idVol, $dateDepart, $idAeroportDepart, $dateArrivee, $idAeroportArrivee, $idAvion, $idPilote, $idCoPilote);
				}
					
				$this->_redirect('/exploitation/index/');
			}
		}
	}
	
	public function ajouterincidentAction() {
		$auth = Zend_Auth::getInstance()->getIdentity();
		$utilisateur = new Application_Model_DbTable_Utilisateur();
		$res = $utilisateur->getInfosUtilisateur($auth->UTI_id);
		
		// on récupère l'ID du vol
		$idVol = $this->_request->getParam('idVol');
		// on instancie un objet AjouterIncident
		$ajouterIncident = new Application_Form_AjouterIncident();
		// on envoie le formulaire sur la view
		$this->view->formAjoutIncident = $ajouterIncident;
		
		if ($this->getRequest()->isPost()) {
			$formData = $this->getRequest()->getPost();
			if ($ajouterIncident->isValid($formData)) {
				if ($formData['typeIncident'] == -1) {
					echo 'Veuillez choisir un incident';
				} else {
					$data = array (
							'TINC_id' => $formData['typeIncident'],
							'VOL_id' => $idVol,
							'UTI_id_serviceExploitation' => $auth->UTI_id
					);
					
					$incident = new Application_Model_DbTable_Incident();
					$insertData = $incident->insertIncident($data);
					$this->_redirect('/exploitation/index/');
				}
			}
		}
	}
	
	public function listeincidentAction() {
		$idVol = $this->_request->getParam('idVol');		
		$incident = new Application_Model_DbTable_Incident();
		$incidentsByVol = $incident->getIncidentByIdVol($idVol);
		$this->view->listeIncidents = $incidentsByVol;		
	}
	
	public function volsencoursAction() {
		 // permet d'avoir la date actuelle sous la forme yyyy-mm-dd
		$today = date('Y-m-d');
		// on instancie un objet VOL
		$vol = new Application_Model_DbTable_Vol();
		// permet de récupérer les vols de la semaine
		$volsEnCours = $vol->getVolsEnCours();
		$this->view->volsEnCours = $volsEnCours;
	}
}


